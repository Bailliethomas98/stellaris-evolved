# common\colony_automation_exceptions\zz_evolved_ai_exceptions.txt

# TO NOTE FOR MODDERS AND THOSE THAT WANT TO REPLICATE THE BELOW FOR AI

# should_ai_use_job_micro = yes has some peculiarities, specifically job_changes
# if two job_changes are available at same time, only one is used...
# so you need to gate them in case they either reach full increase
# or reduce jobs to 0 so they don't block the automation

# use `tec_can_reduce_job_further = { job = <job> }` and
# `tec_can_increase_job_further = { job = <job> }` to gate the job_changes

automate_ai_manage_jobs = {
	should_ai_use_job_micro = yes

	available = {
		exists = owner
		owner = { is_ai = yes }
	}

	emergency = yes
	category = "planet_automation_ai"

	job_changes = {
		# Colonists
			colonist_reduce = {
				available = {
					tec_can_reduce_job_further = { job = colonist }
					exists = owner
					owner = {
						NOR = {
							has_valid_civic = civic_tec_corporate_settlers
							has_valid_civic = civic_tec_regular_star_settlers
							tec_is_dystopian_empire = yes
						}
					}
				}

				job = colonist
				amount = -1
			}

			colonist_increase = {
				available = {
					tec_can_increase_job_further = { job = colonist }
					exists = owner
					owner = {
						OR = {
							has_valid_civic = civic_tec_corporate_settlers
							has_valid_civic = civic_tec_regular_star_settlers
							tec_is_dystopian_empire = yes
						}
					}
				}

				job = colonist
				amount = 1
			}
		# /
		# Amenities Regular
			clerk_reduce = {
				available = {
					tec_can_reduce_job_further = { job = clerk }
					OR = {
						AND = {
							num_unemployed < 1
							free_amenities > 5
						}
						tec_has_possible_job = { job = entertainer }
						tec_has_possible_job = { job = duelist }
					}
					owner = { should_ai_focus_on_trade = no }
				}

				job = clerk
				amount = -1
			}

			clerk_increase = {
				available = {
					tec_can_increase_job_further = { job = clerk }
					OR = {
						tec_has_non_emigrant_pops_unemployed = yes
						free_amenities < -10
						AND = {
							exists = owner
							owner = { should_ai_focus_on_trade = yes }
						}
					}
				}

				job = clerk
				amount = 1
			}

			entertainer_reduce = {
				available = {
					tec_can_reduce_job_further = { job = entertainer }
					free_amenities > 40
				}

				job = entertainer
				amount = -1
			}

			entertainer_increase = {
				available = {
					tec_can_increase_job_further = { job = entertainer }
					free_amenities < 10
				}

				job = entertainer
				amount = 1
			}
		# /

		# Amenities Gestalt
			maintenance_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = maintenance_drone }
					OR = {
						AND = {
							num_unemployed < 1
							free_amenities > 10
						}
						tec_has_possible_job = { job = tec_spareparts_drone }
					}
				}

				job = maintenance_drone
				amount = -1
			}

			maintenance_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = maintenance_drone }
					NOR = {
						tec_has_possible_job = { job = tec_spareparts_drone }
					}
					OR = {
						tec_has_non_emigrant_pops_unemployed = yes
						free_amenities < 0
					}
				}

				job = maintenance_drone
				amount = 1
			}


			tec_spareparts_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = tec_spareparts_drone }
					free_amenities > 40
				}

				job = tec_spareparts_drone
				amount = -1
			}

			tec_spareparts_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = tec_spareparts_drone }
					free_amenities < 10
				}

				job = tec_spareparts_drone
				amount = 1
			}
		# /

		# Crime Regular
			enforcer_reduce = {
				available = {
					tec_can_reduce_job_further = { job = enforcer }
					planet_crime < 1
					tec_has_crime_modifiers = no
					exists = owner
					owner = {
						tec_is_dystopian_empire = no
					}

				}

				job = enforcer
				amount = -1
			}

			enforcer_increase = {
				available = {
					tec_can_increase_job_further = { job = enforcer }
					OR = {
						tec_has_crime_modifiers = yes
						planet_crime > 27
					}
				}

				job = enforcer
				amount = 1
			}
		# /

		# Crime Gestalt
			patrol_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = patrol_drone }
					planet_crime < 1
				}

				job = patrol_drone
				amount = -1
			}

			patrol_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = patrol_drone }
					planet_crime > 27
				}

				job = patrol_drone
				amount = 1
			}
		# /

		# Artisans
			artisan_reduce = {
				available = {
					tec_can_reduce_job_further = { job = artisan }
					exists = owner
					owner = {
						has_monthly_income = {
							resource = consumer_goods
							value > @[economic_plan_consumer_goods_target * 3]
						}
					}
				}

				job = artisan
				amount = -1
			}

			artisan_increase = {
				available = {
					tec_can_increase_job_further = { job = artisan }
					exists = owner
					owner = {
						has_monthly_income = {
							resource = consumer_goods
							value < @economic_plan_consumer_goods_target
						}
					}
				}

				job = artisan
				amount = 1
			}

			artificer_reduce = {
				available = {
					tec_can_reduce_job_further = { job = artificer }
					exists = owner
					owner = {
						has_monthly_income = {
							resource = consumer_goods
							value > @[economic_plan_consumer_goods_target * 3]
						}
					}
				}

				job = artificer
				amount = -1
			}

			artificer_increase = {
				available = {
					tec_can_increase_job_further = { job = artificer }
					exists = owner
					owner = {
						has_monthly_income = {
							resource = consumer_goods
							value < @economic_plan_consumer_goods_target
						}
					}
				}

				job = artificer
				amount = 1
			}

			artisan_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = artisan_drone }
					exists = owner
					owner = {
						OR = {
							country_uses_consumer_goods = no
							has_monthly_income = {
								resource = consumer_goods
								value > @[economic_plan_consumer_goods_target * 3]
							}
						}
					}
				}

				job = artisan_drone
				amount = -1
			}

			artisan_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = artisan_drone }
					exists = owner
					owner = {
						country_uses_consumer_goods = yes
						has_monthly_income = {
							resource = consumer_goods
							value < @economic_plan_consumer_goods_target
						}
					}
				}

				job = artisan_drone
				amount = 1
			}

			#Colonies that only serve as pop worlds shouldn't have broodlords slot open in order to limit resettlement costs and back and forth (it costs 250 credits base!)
			broodlord_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = tec_broodlord_drone }
					habitability = {
						who = owner_main_species
						value < 0.55
					}
				}

				job = tec_broodlord_drone
				amount = -1
			}

			broodlord_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = tec_broodlord_drone }
					habitability = {
						who = owner_main_species
						value > 0.54
					}
				}

				job = tec_broodlord_drone
				amount = 1
			}
		# /
	}
}
