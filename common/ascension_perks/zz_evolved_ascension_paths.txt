# common\ascension_perks\zz_evolved_ascension_paths.txt

# Order
	# Psionics
	# Psychic
	# Ethereals

	# Genetics
	# Biogenics

	# Cybernetic
	# Bioware
	# Synthetics

	# Replicant
	# Biopsionic
	# Cyberpsionic
	# Biopsychic
	# Cyberpsychic

	# Ascendant
# /

# Vars
# -----------------------------------------
@ap_engineered_evolution_POINTS = 3
@ap_engineered_evolution_COST_MULT = -0.25
@ap_evolutionary_mastery_POINTS = 3
@ap_evolutionary_mastery_COST_MULT = -0.25
@ap_tec_genetic_perfection_POINTS = 2

# -----------------------------------------
# MAIN ASCENSION PATHS
# -----------------------------------------
# ------------------------------------------------- Mystical Paths
	ap_mind_over_matter = { 			# Mystical Tier I
		# BASE - Allows branching
			potential = {
				has_utopia = yes
			
				tec_has_main_ascension_path = no

				is_machine_empire = no
				is_hive_empire = no
				is_mechanical_empire = no
				is_synthetic_empire = no
			}
			possible = {
				custom_tooltip = {
					fail_text = "requires_ascension_perks_2"
					num_ascension_perks > 1
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_colonial_centralization"
					has_technology = tech_colonial_centralization
				}
				custom_tooltip = {
					fail_text = "synthetic_empire_psionic_ascension"
					NOT = { has_trait = trait_mechanical }
				}
				custom_tooltip = {
					fail_text = "tec_blocked_path"
					NOR = {
						# Locked if the empire has picked another T1 or T2
						# Completed main perk
							#tec_has_psionic_ascension_path = yes
							tec_has_genetic_ascension_path = yes
							tec_has_cybernetic_ascension_path = yes
							tec_has_synthetic_ascension_path = yes
						# /
						# Completed T2 evolved perk
							has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
							has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
							has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
							has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
							#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
							#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
							#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
							#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
						# /
						# Completed mixed path
							has_ascension_perk = ap_tec_replicant
							has_ascension_perk = ap_tec_biopsionic
							has_ascension_perk = ap_tec_cyberpsionic
						# /
					}
				}
				custom_tooltip = {
					fail_text = tec_crisis_cant_pick_ap
					is_crisis_faction = no
				}
			}
			on_enabled = {
				# Effects on tec_ascension.40
				# Note: tooltips must be here because apparently swaps don't add them for some reason
				if = {	# Base
					limit = {
						NOR = {
							has_country_flag = ap_mind_over_matter_psionic
							has_country_flag = ap_mind_over_matter_psychic
							has_country_flag = ap_mind_over_matter_psionic_ethereal
							has_country_flag = ap_mind_over_matter_psychic_ethereal
						}
					}
					# Situation
					custom_tooltip = "ap_mind_over_matter_base_tooltip"
					if = { # Pre-steps - Psionic Theory
						limit = {
							NOR = {
								has_tech_option = tech_psionic_theory
								has_technology = tech_psionic_theory
							}
						}
						custom_tooltip = "tec_ap_unlock_tech_psionic_theory"
					}
					if = { # Free - Telepathy
						limit = {
							NOR = {
								has_tech_option = tech_telepathy
								has_technology = tech_telepathy
							}
						}
						custom_tooltip = "tec_ap_unlock_tech_telepathy"
					}
				}
				if = {	# Psionic
					limit = {
						has_country_flag = ap_mind_over_matter_psionic
					}
					custom_tooltip = "ap_mind_over_matter_psionic_tooltip"
					custom_tooltip = "ap_mind_over_matter_psionic_tradition"
				}
 				if = {	# Psychic
					limit = {
						has_country_flag = ap_mind_over_matter_psychic
					}
					custom_tooltip = "ap_mind_over_matter_psychic_tooltip"
					custom_tooltip = "ap_mind_over_matter_psychic_tradition"
				}
				#if = {	# Ethereal Psionic
				#}
				#if = {	# Ethereal Psychic
				#}
			}
			ai_weight = {
				weight = @tec_force_path_ap_weight
				# Ethic
					modifier = {
						factor = 0.75
						is_spiritualist = no
					}
					modifier = {
						factor = 1.25
						is_spiritualist = yes
					}
				# /
				# Overlord
					modifier = {
						factor = 2
						is_subject = yes
						overlord = {
							tec_has_mystical_ascension_path = yes
						}
					}
				# /
				# Ascension Controller
					# Note: This affect mixed paths
					# Global checker
					modifier = {
						factor = 0.5
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_mystical_empires
								value >= 2
							}
						}
						tec_is_mystical_ascension_beeliner = no
					}
					modifier = {
						factor = 0.5
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_mystical_empires
								value >= 3
							}
						}
						tec_is_mystical_ascension_beeliner = no
					}
					modifier = {
						factor = 0.25
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_mystical_empires
								value >= 5
							}
						}
						tec_is_mystical_ascension_beeliner = no
					}
				# /	
				modifier = {
					factor = 10
					has_ascension_perk = ap_become_the_crisis
				}
			}
		# /
		tradition_swap = {	# Psionic
			name = ap_mind_over_matter_psionic
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {
				has_country_flag = ap_mind_over_matter_psionic
			}
			on_enabled = {
				custom_tooltip = "ap_mind_over_matter_psionic_tooltip"
				custom_tooltip = "ap_mind_over_matter_psionic_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
		tradition_swap = {	# Psychic
			name = ap_mind_over_matter_psychic
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {
				has_country_flag = ap_mind_over_matter_psychic
			}
			on_enabled = {
				custom_tooltip = "ap_mind_over_matter_psychic_tooltip"
				custom_tooltip = "ap_mind_over_matter_psychic_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
		#tradition_swap = {	# Ethereal Psionic
		#	name = ap_mind_over_matter_psionic_ethereal
		#}
		#tradition_swap = {	# Ethereal Psychic
		#	name = ap_mind_over_matter_psychic_ethereal
		#}
	}

	ap_tec_psionic_ascendance = {		# Psionic Tier II	TODO ASCENSION
		potential = {
			has_utopia = yes

			OR = {
				tec_has_main_ascension_path = no
				tec_has_psionic_ascension_path = yes
			}

			tec_has_secondary_ascension_path = no

			is_machine_empire = no
			is_hive_empire = no

			is_mechanical_empire = no
			is_synthetic_empire = no
		}
		possible = {
			custom_tooltip = {
				fail_text = "requires_ascension_perks_5"
				num_ascension_perks > 4
			}
			custom_tooltip = {
				fail_text = "tec_ap_require_tech_galactic_administration"
				has_technology = tech_galactic_administration
			}
			custom_tooltip = {	# Tradition
				fail_text = "ap_tec_psionic_ascendance_requirements_path"
				has_tradition = tr_psionics_finish
			}
			custom_tooltip = {	# Situation
				fail_text = "ap_tec_psionic_ascendance_requirements_situation"
				has_country_flag = tec_psionics_gate_completed
			}
			custom_tooltip = {
				fail_text = "synthetic_empire_psionic_ascension"
				NOT = { has_trait = trait_mechanical }
			}
			custom_tooltip = {
				fail_text = "tec_blocked_path"
				NOR = {
					# if two tier 1 or a tier 2 is reached, the path is blocked
					# mixed
					AND = {	# Replicants
						tec_has_genetic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					AND = { # Purity
						tec_has_genetic_ascension_path = yes
						tec_has_psionic_ascension_path = yes
					}
					AND = {	# Purity hive
						tec_has_genetic_ascension_path = yes
						has_ascension_perk = ap_tec_hive_psionic_1
					}
					AND = {	# Infused
						tec_has_psionic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					# pure
					has_ascension_perk = ap_evolutionary_mastery
					has_ascension_perk = ap_synthetic_evolution
					has_ascension_perk = ap_tec_cybernetic_fascination
				#	has_ascension_perk = ap_transcendence

					has_ascension_perk = ap_tec_hive_psionic_2
					}
			}
		}

		on_enabled = {
			hidden_effect = {
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_t2_psionic_effect = yes
				}
				else = {
					country_event = {
						id = tec_psionic_path.200
					}
				}
			}
			if = {	# Special effect
				limit = {
					has_country_flag = tec_psionics_t2_completed
				}
				custom_tooltip = ap_tec_psionic_ascendance_tooltip_discovered
			}
			else = {
				custom_tooltip = ap_tec_psionic_ascendance_tooltip
			}
			#custom_tooltip = tec_ap_unlock_ascendance_tradition
			custom_tooltip = ap_tec_psionic_ascendance_steps
		}

		ai_weight = {
			factor = @tec_force_path_ap_weight
		}
	}
	#ap_tec_psychic_mastery = {			# Psychic Tier II	TODO ASCENSION
	#}
	#ap_tec_ethereal_transcendence = {	# Ethereal Tier II	TODO ASCENSION
	#}
# /

# ------------------------------------------------- Genetics
	ap_engineered_evolution = {			# Biologic Tier I
		# BASE - Allows branching
			potential = {
				has_utopia = yes
				tec_has_main_ascension_path = no

				is_machine_empire = no

				is_mechanical_empire = no
				is_synthetic_empire = no
			}
			possible = {
				custom_tooltip = {
					fail_text = "requires_ascension_perks_2"
					num_ascension_perks > 1
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_genome_mapping"
					has_technology = tech_genome_mapping
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_colonial_centralization"
					has_technology = tech_colonial_centralization
				}
				custom_tooltip = {
					fail_text = "synthetic_empire_biological_ascension"
					NOT = { has_trait = trait_mechanical }
				}
				custom_tooltip = {
					fail_text = "requires_free_tradition_tree"
					num_tradition_categories < @tec_max_tradition_slots
				}
				custom_tooltip = {
					fail_text = "tec_blocked_path"
					NOR = {
						# Locked if the empire has picked another T1 or T2
						# Completed main perk
							tec_has_psionic_ascension_path = yes
							#tec_has_genetic_ascension_path = yes
							tec_has_cybernetic_ascension_path = yes
							tec_has_synthetic_ascension_path = yes
						# /
						# Completed T2 evolved perk
							has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
							has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
							has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
							has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
							#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
							#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
							#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
							#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
						# /
						# Completed mixed path
							has_ascension_perk = ap_tec_replicant
							has_ascension_perk = ap_tec_biopsionic
							has_ascension_perk = ap_tec_cyberpsionic
						# /
					}
				}
				custom_tooltip = {
					fail_text = tec_crisis_cant_pick_ap
					is_crisis_faction = no
				}
			}
			on_enabled = {
				# Effects on tec_ascension.10
				# Note: tooltips must be here because apparently swaps don't add them for some reason
				if = {	# Base
					limit = {
						NOR = {
							has_country_flag = ap_engineered_evolution_genetics
							has_country_flag = ap_engineered_evolution_biogenics
							has_country_flag = ap_engineered_evolution_biocreation
						}
					}
					# Situation
					custom_tooltip = "ap_engineered_evolution_tooltip"
					if = {	# Pre-steps - Gene Tailoring
						limit = {
							NOR = {
								has_tech_option = tech_gene_tailoring
								has_technology = tech_gene_tailoring
							}
						}
						custom_tooltip = "tec_ap_unlock_tech_gene_tailoring"
					}
					if = {	# Free - Gene Seed
						limit = {
							NOT = {
								has_technology = tech_gene_seed_purification
							}
						}
						custom_tooltip = "tec_ap_unlock_tech_gene_seed_purification"
					}
					if = {	# Notify Clone Army
						limit = {
							has_origin = origin_clone_army
							OR = {
								has_trait = trait_clone_soldier_infertile
								has_trait = trait_clone_soldier_infertile_full_potential
							}
						}
						custom_tooltip = "clone_soldier_locked_genes"
					}
				}
				if = {	# Genetic
					limit = {
						has_country_flag = ap_engineered_evolution_genetics
					}
					custom_tooltip = "ap_engineered_evolution_genetics_tooltip"
					custom_tooltip = "ap_engineered_evolution_genetics_tradition"
				}
				if = {	# Biogenic
					limit = {
						has_country_flag = ap_engineered_evolution_biogenics
					}
					custom_tooltip = "ap_engineered_evolution_biogenics_tooltip"
					custom_tooltip = "ap_engineered_evolution_biogenics_tradition"
				}
				#if = {	# Biocreation
				#}
			}
			ai_weight = {
				factor = @tec_force_path_ap_weight
				# Ethic
					modifier = {
						factor = 0.75
						OR = {
							is_industrialist = yes
							has_authority = auth_tec_hive_cybernetic
						}
					}
					modifier = {
						factor = 1.25
						OR = {
							is_ecologist = yes
							has_authority = auth_hive_mind
							has_authority = auth_tec_hive_biological
						}
					}
				# /
				# Overlord
					modifier = {
						factor = 2
						is_subject = yes
						overlord = {
							tec_has_biological_ascension_path = yes
						}
					}
				# /
				# Pop types
					modifier = {
						factor = 1.5
						pop_percentage = {
							percentage >= 0.20
							limit = {
								has_trait = @trait_tec_bioservant
							}
						}
					}
				# /
				# Ascension Controller
					# Note: This affect mixed paths
					# Global checker
					modifier = {
						factor = 0.75
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_bioascended_empires
								value >= 2
							}
						}
						tec_is_biological_ascension_beeliner = no
					}
					modifier = {
						factor = 0.75
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_bioascended_empires
								value >= 3
							}
						}
						tec_is_biological_ascension_beeliner = no
					}
					modifier = {
						factor = 0.75
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_bioascended_empires
								value >= 4
							}
						}
						tec_is_biological_ascension_beeliner = no
					}
				# /	
			}
		# /
		tradition_swap = {	# Genetics
			name = ap_engineered_evolution_genetics
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {	# TODO ASCENSION
				has_country_flag = ap_engineered_evolution_genetics
			}
			on_enabled = {
				custom_tooltip = "ap_engineered_evolution_genetics_tooltip"
				custom_tooltip = "ap_engineered_evolution_genetics_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
		tradition_swap = {	# Biogenic
			name = ap_engineered_evolution_biogenics
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {	# TODO ASCENSION
				has_country_flag = ap_engineered_evolution_biogenics
			}
			on_enabled = {
				custom_tooltip = "ap_engineered_evolution_biogenics_tooltip"
				custom_tooltip = "ap_engineered_evolution_biogenics_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
		#tradition_swap = {	# Biocreation
		#	name = ap_engineered_evolution_biocreation
		#}
	}

	ap_tec_genetic_perfection = {		# Biologic Tier II	TODO ASCENSION	
		potential = {
			# tec_has_genetic_ascension_path = yes
			has_utopia = yes

			OR = {
				tec_has_main_ascension_path = no
				tec_has_genetic_ascension_path = yes
			}

			tec_has_secondary_ascension_path = no

			is_machine_empire = no

			is_mechanical_empire = no
			is_synthetic_empire = no
		}
		possible = {
			custom_tooltip = {
				fail_text = "requires_ascension_perks_5"
				num_ascension_perks > 4
			}
			custom_tooltip = {
				fail_text = "tec_ap_require_tech_galactic_administration"
				has_technology = tech_galactic_administration
			}
			custom_tooltip = {	# Tradition
				fail_text = "ap_tec_genetic_perfection_requirements_path"
				has_tradition = tr_genetics_finish
			}
			custom_tooltip = {	# Situation
				fail_text = "ap_tec_genetic_perfection_requirements_situation"
				has_country_flag = tec_genetics_gate_completed
			}
			custom_tooltip = {
				fail_text = "synthetic_empire_biological_ascension"
				NOT = { has_trait = trait_mechanical }
			}
			custom_tooltip = {
				fail_text = "requires_technology_glandular_acclimation"
				has_technology = tech_glandular_acclimation
			}
			custom_tooltip = {
				fail_text = "requires_not_shroudwalker_apprentice"
				NOT = { has_origin = origin_shroudwalker_apprentice }
			}
			custom_tooltip = {
				fail_text = "tec_blocked_path"
				NOR = {
					# if two tier 1 or a tier 2 is reached, the path is blocked
					# mixed
					AND = {	# Replicants
						tec_has_genetic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					AND = { # Purity
						tec_has_genetic_ascension_path = yes
						tec_has_psionic_ascension_path = yes
					}
					AND = {	# Purity hive
						tec_has_genetic_ascension_path = yes
						has_ascension_perk = ap_tec_hive_psionic_1
					}
					AND = {	# Infused
						tec_has_psionic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					# pure
					#has_ascension_perk = ap_evolutionary_mastery
					has_ascension_perk = ap_synthetic_evolution
					has_ascension_perk = ap_tec_cybernetic_fascination
					has_ascension_perk = ap_transcendence

					has_ascension_perk = ap_tec_hive_psionic_2
				}
			}
		}

		on_enabled = {
			hidden_effect = {
				set_country_flag = tec_allow_t3_biotraits
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_t2_genetics_effect = yes
				}
				else = {
					country_event = {
						id = tec_gene_path.300
					}
				}
			}
			if = {
				limit = {
					has_origin = origin_clone_army
					OR = {
						has_trait = trait_clone_soldier_infertile
						has_trait = trait_clone_soldier_infertile_full_potential
					}
				}
				custom_tooltip = clone_soldier_locked_genes
			}
			if = {	# GIGASTRUCTURES COMP
				limit = {
					has_global_flag = giga_game_started
				}
				add_research_option = @giga_tech_the_vat
			}

			custom_tooltip = ap_tec_genetic_perfection_tooltip
			#custom_tooltip = tec_ap_unlock_genetic_perfection_tradition
			custom_tooltip = ap_tec_genetic_perfection_steps
		}

		modifier = {
			BIOLOGICAL_species_trait_points_add = @ap_tec_genetic_perfection_POINTS
		}

		ai_weight = {
			factor = @tec_force_path_ap_weight
		}
	}
	#ap_tec_biogenic = {				# Biogenic Tier II	TODO ASCENSION
# /

# ------------------------------------------------- Cybernetics
	ap_the_flesh_is_weak = {			# Cybernetics Tier I
		# Base - Allows branching
			potential = {
				has_utopia = yes
				tec_has_main_ascension_path = no

				OR = {
					tec_has_cybernetic_ascension_path_exception = yes
					is_machine_empire = no
				}
				is_mechanical_empire = no
			}
			possible = {
				custom_tooltip = {
					fail_text = "requires_ascension_perks_2"
					num_ascension_perks > 1
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_colonial_centralization"
					has_technology = tech_colonial_centralization
				}
				custom_tooltip = {
					fail_text = "requires_technology_integrated_cybernetics"
					has_technology = tech_integrated_cybernetics
				}
				custom_tooltip = {
					fail_text = "synthetic_empire_synthetic_ascension"
					NOT = { has_trait = trait_mechanical }
				}
				custom_tooltip = {
					fail_text = "requires_free_tradition_tree"
					num_tradition_categories < @tec_max_tradition_slots
				}
				custom_tooltip = {
					fail_text = "tec_blocked_path"
					NOR = {
						# Locked if the empire has picked another T1 or T2
						# Completed main perk
							#tec_has_psionic_ascension_path = yes
							tec_has_genetic_ascension_path = yes
							tec_has_cybernetic_ascension_path = yes
							tec_has_synthetic_ascension_path = yes
						# /
						# Completed T2 evolved perk
							has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
							has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
							has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
							has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
							#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
							#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
							#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
							#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
						# /
						# Completed mixed path
							has_ascension_perk = ap_tec_replicant
							has_ascension_perk = ap_tec_biopsionic
							has_ascension_perk = ap_tec_cyberpsionic
						# /
					}
				}
				custom_tooltip = {
					fail_text = tec_crisis_cant_pick_ap
					is_crisis_faction = no
				}
			}
			on_enabled = {
				# Effects on tec_ascension.20
				# Note: tooltips must be here because apparently swaps don't add them for some reason
				if = {	# Base
					limit = {
						NOR = {
							has_country_flag = ap_the_flesh_is_weak_cybernetic
							has_country_flag = ap_the_flesh_is_weak_bioware
						}
					}
					# Situation
					if = {	# Cyborgs - upgrade or swap to bioware
						limit = {
							OR = {
								tec_has_cybernetic_ascension_path = yes
								tec_is_cyberhive = yes
								has_valid_civic = civic_machine_assimilator
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_base_cyborg_tooltip"
					}
					else_if = {	# Non Cyborgs
						limit = {
							NOR = {
								is_hive_empire = yes
								is_machine_empire = yes
								tec_has_cybernetic_ascension_path = yes
								tec_is_cyberhive = yes
								has_valid_civic = civic_machine_assimilator
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_base_tooltip"
					}
					else_if = {	# Hive
						limit = {
							is_hive_empire = yes
							NOR = {
								tec_is_cyberhive = yes
								tec_has_cybernetic_ascension_path = yes
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_base_hive_tooltip"
					}
					else_if = {	# Machine
						limit = {
							is_machine_empire = yes
							NOR = {
								has_valid_civic = civic_machine_assimilator
								tec_has_cybernetic_ascension_path = yes
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_base_machine_tooltip"
					}
					else = {	# Fallback just in case
						custom_tooltip = "ap_the_flesh_is_weak_base_tooltip"
					}
					if = {	# Free - Neuro Quantum Links
						limit = {
							NOR = {
								has_tech_option = tech_neuro_quantum_links
								has_technology = tech_neuro_quantum_links
							}
						}
						custom_tooltip = "tec_ap_unlock_tech_neuro_quantum_links"
					}
				}
				if = {	# Cybernetic
					limit = {
						has_country_flag = ap_the_flesh_is_weak_cybernetic
					}
					if = {	# Already Cyborg
						limit = {
							hidden_trigger = {
								always = no
								# TODO ASCENSION - Assimilators and etc
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_cybernetic_cyborg_tooltip"
					}
					else_if = {	# Regular
						limit = {
							hidden_trigger = {
								is_gestalt = no
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_cybernetic_tooltip"
					}
					else_if = {	# Hive
						limit = {
							hidden_trigger = {
								is_hive_empire = yes
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_cybernetic_hive_tooltip"
					}
					else_if = {	# Machine
						limit = {
							hidden_trigger = {
								is_machine_empire = yes
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_cybernetic_machine_tooltip"
					}
					else = {	# Fallback just in case
						custom_tooltip = "ap_the_flesh_is_weak_cybernetic_tooltip"
					}
					custom_tooltip = "ap_the_flesh_is_weak_cybernetic_tradition"
				}
				if = {	# Bioware
					limit = {
						has_country_flag = ap_the_flesh_is_weak_bioware
					}
					if = {	# Already cyborg
						limit = {
							hidden_trigger = {
								always = no
								# TODO ASCENSION - Already having bioware
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_bioware_bioborg_tooltip"
					}
					else_if = {	# Regular
						limit = {
							hidden_trigger = {
								is_gestalt = no
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_bioware_tooltip"
					}
					else_if = {	# Hives
						limit = {
							hidden_trigger = {
								is_hive_empire = yes
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_bioware_hive_tooltip"
					}
					else_if = {	# Machines
						limit = {
							hidden_trigger = {
								is_machine_empire = yes
							}
						}
						custom_tooltip = "ap_the_flesh_is_weak_bioware_machine_tooltip"
					}
					else = {	# Fallback just in case
						custom_tooltip = "ap_the_flesh_is_weak_bioware_tooltip"
					}
					custom_tooltip = "ap_the_flesh_is_weak_bioware_tradition"
				}
			}
			ai_weight = {
				factor = @tec_force_path_ap_weight
				# Ethic
					modifier = {
						factor = 0.75
						NOR = {
							is_industrialist = yes
							is_materialist = yes
							has_valid_civic = civic_machine_assimilator
							has_authority = auth_tec_hive_cybernetic
							AND = {
								is_spiritualist = yes
								tec_is_robot_lover_spiritualist = yes
							}
						}
					}
					modifier = {
						factor = 1.25
						OR = {
							is_industrialist = yes
							is_materialist = yes
							has_valid_civic = civic_machine_assimilator
							has_authority = auth_tec_hive_cybernetic
							AND = {
								is_spiritualist = yes
								tec_is_robot_lover_spiritualist = yes
							}
						}
					}
				# /
				# Overlord
					modifier = {
						factor = 2
						is_subject = yes
						overlord = {
							tec_has_technological_cybernetic_ascension_path = yes
						}
					}
				# /
				# Pop types
					modifier = {
						factor = 1.5
						pop_percentage = {
							percentage >= 0.20
							limit = {
								has_trait = "trait_mechanical"
							}
						}
					}
				# /
				# Ascension Controller
					# Note: This affect mixed paths
					# Global checker
					modifier = {
						factor = 0.75
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_technoascended_empires
								value >= 2
							}
						}
						tec_is_technological_cybernetic_ascension_beeliner = no
					}
					modifier = {
						factor = 0.75
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_technoascended_empires
								value >= 3
							}
						}
						tec_is_technological_cybernetic_ascension_beeliner = no
					}
					modifier = {
						factor = 0.75
						event_target:global_event_country = {
							check_variable = {
								which = tec_number_of_technoascended_empires
								value >= 4
							}
						}
						tec_is_technological_cybernetic_ascension_beeliner = no
					}
				# /
				# Other factors
					modifier = {
						factor = 0
						#Avoid confusion for ais, better standard paths
						is_ai = yes
						has_country_flag = tec_desires_to_be_pure
					}
				# /
			}
		# /
		tradition_swap = {	# Cybernetics
			name = ap_the_flesh_is_weak_cybernetic
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {	# TODO ASCENSION
				has_country_flag = ap_the_flesh_is_weak_cybernetic
			}
			on_enabled = {
				if = {	# Already Cyborg
					limit = {
						hidden_trigger = {
							always = no
							# TODO ASCENSION - Assimilators and etc
						}
					}
					custom_tooltip = "ap_the_flesh_is_weak_cybernetic_cyborg_tooltip"
				}
				else_if = {	# Regular
					limit = {
						hidden_trigger = {
							is_gestalt = no
						}
					}
					custom_tooltip = "ap_the_flesh_is_weak_cybernetic_tooltip"
				}
				else_if = {	# Hive
					limit = {
						hidden_trigger = {
							is_hive_empire = yes
						}
					}
					custom_tooltip = "ap_the_flesh_is_weak_cybernetic_hive_tooltip"
				}
				else_if = {	# Machine
					limit = {
						hidden_trigger = {
							is_machine_empire = yes
						}
					}
					custom_tooltip = "ap_the_flesh_is_weak_cybernetic_machine_tooltip"
				}
				custom_tooltip = "ap_the_flesh_is_weak_cybernetic_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
		tradition_swap = {	# Bioware
			name = ap_the_flesh_is_weak_bioware
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {	# TODO ASCENSION
				has_country_flag = ap_the_flesh_is_weak_bioware
			}
			on_enabled = {
				if = {	# Already cyborg
					limit = {
						hidden_trigger = {
							always = no
							# TODO ASCENSION - Already having bioware
						}
					}
					custom_tooltip = "ap_the_flesh_is_weak_bioware_bioborg_tooltip"
				}
				else_if = {	# Regular
					limit = {
						hidden_trigger = {
							is_gestalt = no
						}
					}
					custom_tooltip = "ap_the_flesh_is_weak_bioware_tooltip"
				}
				else_if = {	# Hives
					limit = {
						hidden_trigger = {
							is_hive_empire = yes
						}
					}
					custom_tooltip = "ap_the_flesh_is_weak_bioware_hive_tooltip"
				}
				else_if = {	# Machines
					limit = {
						hidden_trigger = {
							is_machine_empire = yes
						}
					}
					custom_tooltip = "ap_the_flesh_is_weak_bioware_machine_tooltip"
				}
				custom_tooltip = "ap_the_flesh_is_weak_bioware_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
	}

	ap_tec_cybernetic_revolution = {	# Cybernetics Tier II	TODO ASCENSION
		potential = {
			# has_ascension_perk = ap_tec_cybernetic_fascination
			has_utopia = yes

			OR = {
				tec_has_main_ascension_path = no
				tec_has_cybernetic_ascension_path = yes
			}

			tec_has_secondary_ascension_path = no

			OR = {
				tec_has_cybernetic_ascension_path_exception = yes
				is_machine_empire = no
			}
			is_mechanical_empire = no
		}
		possible = {
			custom_tooltip = {
				fail_text = "requires_ascension_perks_5"
				num_ascension_perks > 4
			}
			custom_tooltip = {
				fail_text = "tec_ap_require_tech_galactic_administration"
				has_technology = tech_galactic_administration
			}
			custom_tooltip = {	# Tradition
				fail_text = "ap_tec_cybernetic_revolution_requirements_path"
				has_tradition = tr_cybernetics_finish
			}
			custom_tooltip = {	# Situation
				fail_text = "ap_tec_cybernetic_revolution_requirements_situation"
				has_country_flag = tec_cybernetics_gate_completed
			}
			custom_tooltip = {
				fail_text = "synthetic_empire_synthetic_ascension"
				NOT = { has_trait = trait_mechanical }
			}
			custom_tooltip = {
				fail_text = "requires_technology_droid_workers_hive"
				OR = {
					has_technology = tech_droid_workers
					has_valid_civic = civic_tec_origin_mecha_perfectionists
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_shroudwalker_apprentice"
				NOT = { has_origin = origin_shroudwalker_apprentice }
			}
			custom_tooltip = {
				fail_text = "hive_mind_biological_ascension_only2"
				NAND = {
					is_hive_empire = yes
					NOT = {
						tec_is_cyberhive = yes
					}
				}
			}
			custom_tooltip = {
				fail_text = "tec_blocked_path"
				NOR = {
					# if two tier 1 or a tier 2 is reached, the path is blocked
					# mixed
					AND = {	# Replicants
						tec_has_genetic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					AND = { # Purity
						tec_has_genetic_ascension_path = yes
						tec_has_psionic_ascension_path = yes
					}
					AND = {	# Purity hive
						tec_has_genetic_ascension_path = yes
						has_ascension_perk = ap_tec_hive_psionic_1
					}
					AND = {	# Infused
						tec_has_psionic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					# pure
					has_ascension_perk = ap_evolutionary_mastery
					has_ascension_perk = ap_synthetic_evolution
					#has_ascension_perk = ap_tec_cybernetic_fascination
					has_ascension_perk = ap_transcendence

					has_ascension_perk = ap_tec_hive_psionic_2
				}
			}
		}

		on_enabled = {
			hidden_effect = {
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_t2_cybernetics_effect = yes
				}
				else = {
					country_event = {
						id = tec_cybernetic_path.200
					}
				}
			}
			custom_tooltip = ap_tec_cybernetic_revolution_tooltip
			#custom_tooltip = tec_ap_unlock_cybernetic_revolution_tradition
			custom_tooltip = ap_tec_cybernetic_revolution_steps
		}

		modifier = {
			modify_species_cost_mult = @ap_evolutionary_mastery_COST_MULT
		}

		ai_weight = {
			factor = @tec_force_ap_weight
		}
	}
	#ap_tec_bioware = {					# Bioware Tier II	TODO ASCENSION
	#}
# /

# ------------------------------------------------- Synthetics
	ap_synthetic_evolution = {			# Synthetics Tier I
		# BASE - Allows branching
			potential = {
				# has_ascension_perk = ap_the_flesh_is_weak
				has_utopia = yes
				
				tec_has_main_ascension_path = no

				tec_has_secondary_ascension_path = no

				is_machine_empire = no
				is_hive_empire = no

				is_mechanical_empire = no
			}
			possible = {
				custom_tooltip = {
					fail_text = "requires_ascension_perks_2"
					num_ascension_perks > 1
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_colonial_centralization"
					has_technology = tech_colonial_centralization
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_droid_workers"
					has_technology = tech_droid_workers
				}
				custom_tooltip = {
					fail_text = "requires_not_shroudwalker_apprentice"
					NOT = { has_origin = origin_shroudwalker_apprentice }
				}
				custom_tooltip = {
					fail_text = "synthetic_empire_synthetic_ascension"
					NOT = { has_trait = trait_mechanical }
				}
				custom_tooltip = {
					fail_text = "hive_mind_biological_ascension_only2"
					NOT = { is_hive_empire = yes }
				}
				custom_tooltip = {
					fail_text = "requires_free_tradition_tree"
					num_tradition_categories < @tec_max_tradition_slots
				}
				custom_tooltip = {
					fail_text = "tec_blocked_path"
					NOR = {
						# Completed main perk
							tec_has_psionic_ascension_path = yes
							tec_has_genetic_ascension_path = yes
							tec_has_cybernetic_ascension_path = yes
							#tec_has_synthetic_ascension_path = yes
						# /
					}
				}
			}
			on_enabled = {
				# Effects on tec_ascension.30
				# Note: tooltips must be here because apparently swaps don't add them for some reason
				if = {	# Base
					limit = {
						NOR = {
							has_country_flag = ap_synthetic_evolution_mechanical
							has_country_flag = ap_synthetic_evolution_digital
						}
					}
					# Situation
					if = {	# Robot empire
						limit = {
							OR = {
								has_country_flag = synthetic_empire
								tec_has_synthetic_ascension_origin = yes
							}
						}
						custom_tooltip = "ap_synthetic_evolution_base_robot_tooltip"
					}
					else_if = {	# Non machine
						limit = {
							is_machine_empire = no
						}
						custom_tooltip = "ap_synthetic_evolution_base_tooltip"
					}
					else_if = {	# Machine
						limit = {
							is_machine_empire = yes
						}
						custom_tooltip = "ap_synthetic_evolution_base_tooltip"
					}
					else = {	# Fallback just in case
						custom_tooltip = "ap_synthetic_evolution_base_tooltip"
					}
					# Notifications
					if = {	# Necrophages
						limit = {
							has_origin = origin_necrophage
							has_trait = trait_necrophage
						}
						custom_tooltip = disables_necrophage_features
					}
					if = {	# Clone Army
						limit = {
							has_origin = origin_clone_army
							OR = {
								has_trait = trait_clone_soldier_infertile
								has_trait = trait_clone_soldier_infertile_full_potential
								has_trait = trait_clone_soldier_fertile
							}
						}
						custom_tooltip = disables_clone_army_origin_features
					}
					if = {	# Overtuned
						limit = {
							has_origin = origin_overtuned
						}
						custom_tooltip = disables_overtuned_features
					}
					if = {	# Idyllic
						limit = {
							tec_is_idyllic_bloom_empire = yes
						}
						custom_tooltip = disables_idyllic_bloom
					}
					# Techs
					if = {	# Free - Synths
						limit = {
							NOR = {
								has_technology = tech_synthetic_workers
								has_tech_option = tech_synthetic_workers
							}
						}
						custom_tooltip = "tec_ap_unlock_tech_synthetic_workers"
					}
					if = {	# Free - Synth leaders
						limit = {
							NOR = {
								has_technology = tech_synthetic_leaders
								has_tech_option = tech_synthetic_leaders
							}
						}
						custom_tooltip = "tec_ap_unlock_tech_synthetic_leaders"
					}
				}
				if = {	# Mechanical
					limit = {
						has_country_flag = ap_synthetic_evolution_mechanical
					}
					if = {	# Regular
						limit = {
							hidden_trigger = {
								is_machine_empire = no
							}
						}
						custom_tooltip = "ap_synthetic_evolution_mechanical_tooltip"
					}
					else_if = {	# Machine
						limit = {
							hidden_trigger = {
								is_machine_empire = yes
							}
						}
						custom_tooltip = "ap_synthetic_evolution_mechanical_machine_tooltip"
					}
					custom_tooltip = "ap_synthetic_evolution_mechanical_tradition"
				}
				if = {	# Digital
					limit = {
						has_country_flag = ap_synthetic_evolution_digital
					}
					if = {	# Regular
						limit = {
							hidden_trigger = {
								is_machine_empire = no
							}
						}
						custom_tooltip = "ap_synthetic_evolution_mechanical_tooltip"
					}
					else_if = {	# Machines
						limit = {
							hidden_trigger = {
								is_machine_empire = yes
							}
						}
						custom_tooltip = "ap_synthetic_evolution_mechanical_machine_tooltip"
					}
					custom_tooltip = "ap_synthetic_evolution_mechanical_tradition"
				}
			}
			ai_weight = {
				# TODO ASCENSION - Allow for AIs
				weight = 0
				#not as common, ais are bad at being bots
				modifier = {
					factor = 0.1
					NOR = {
						OR = {
							has_ethic = ethic_materialist
							has_ethic = ethic_fanatic_materialist
						}
						OR = {
							has_ethic = ethic_industrialist
							has_ethic = ethic_fanatic_industrialist
						}
					}
				}
				# disablers
				modifier = {
					factor = 0
					OR = {
						has_origin = origin_necrophage
						has_origin = origin_slavers
						has_valid_civic = civic_tec_origin_gaia_affinity
						has_valid_civic = civic_tec_origin_neuroslug
						has_valid_civic = civic_tec_origin_elders
					}
				}
			}
		# /
		tradition_swap = {	# Mechanical
			name = ap_synthetic_evolution_mechanical
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {	# TODO ASCENSION
				has_country_flag = ap_synthetic_evolution_mechanical
			}
			on_enabled = {
				if = {	# Regular
					limit = {
						hidden_trigger = {
							is_machine_empire = no
						}
					}
					custom_tooltip = "ap_synthetic_evolution_mechanical_tooltip"
				}
				else_if = {	# Machine
					limit = {
						hidden_trigger = {
							is_machine_empire = yes
						}
					}
					custom_tooltip = "ap_synthetic_evolution_mechanical_machine_tooltip"
				}
				custom_tooltip = "ap_synthetic_evolution_mechanical_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
		tradition_swap = {	# Digital
			name = ap_synthetic_evolution_digital
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {	# TODO ASCENSION
				has_country_flag = ap_synthetic_evolution_digital
			}
			on_enabled = {
				if = {	# Regular
					limit = {
						hidden_trigger = {
							is_gestalt = no
						}
					}
					custom_tooltip = "ap_synthetic_evolution_digital_tooltip"
				}
				else_if = {	# Machine or already robotic
					limit = {
						hidden_trigger = {
							tec_is_synthetic_empire = yes
						}
					}
					custom_tooltip = "ap_synthetic_evolution_digital_machine_tooltip"
				}
				custom_tooltip = "ap_synthetic_evolution_digital_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
	}
	ap_synthetic_age = {				# (machine) Mechanical Tier I
		# BASE - Allows branching
			potential = {
				has_synthethic_dawn = yes
				is_machine_empire = yes
				tec_has_main_ascension_path = no
				tec_has_secondary_ascension_path = no
			}
			possible = {
				custom_tooltip = {
					fail_text = "requires_ascension_perks_2"
					num_ascension_perks > 1
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_colonial_centralization"
					has_technology = tech_colonial_centralization
				}
				#custom_tooltip = {
				#	fail_text = "requires_free_tradition_tree"
				#	num_tradition_categories < @tec_max_tradition_slots
				#}
			}
			on_enabled = {
				custom_tooltip = "tec_ap_synthetic_age_tooltip"
				hidden_effect = {
					# Global Controller
						event_target:global_event_country = {
							change_variable = {
								which = tec_number_of_technoascended_empires
								value = 1
							}
						}
					# /
					# Effects
						if = {
							limit = {
								has_country_flag = tec_advanced_ascension
							}
							tec_give_machine_cyb_t1_ap_effect = yes
						}
						else = {
							country_event = {
								id = tec_machine_path.100
							}
						}
					# /
				}
				if = {	# Pre-steps - robomodding
					limit = {
						NOT = {
							has_technology = tech_robomodding_m
						}
					}
					custom_tooltip = "tec_ap_provides_tech_robomodding_m"
					hidden_effect = {
						add_research_option = tech_robomodding_m
					}
				}
				custom_tooltip = tec_ap_unlock_synthetics_tradition
				if = {	# Notify Lacking Tech
					limit = {
						NOT = {
							has_technology = tech_robomodding_m
						}
					}
					custom_tooltip = tec_ap_synthetic_age_stopped
				}

				custom_tooltip = ap_synthetic_age_steps
			}
			#modifier = {
				#MACHINE_species_trait_points_add = 2
				#modify_species_cost_mult = -0.25
			#}
			ai_weight = {
				factor = @tec_force_path_ap_weight
			}
		# /
		tradition_swap = {	# mechanical
			name = ap_synthetic_age_mechanical
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {	# TODO ASCENSION
				has_country_flag = ap_synthetic_age_mechanical
			}
			on_enabled = {
				custom_tooltip = "ap_synthetic_age_mechanical_tooltip"
				custom_tooltip = "ap_synthetic_age_mechanical_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
		tradition_swap = {	# Digital
			name = ap_synthetic_age_digital
			inherit_effects = no
			inherit_icon = no
			inherit_name = no
			trigger = {	# TODO ASCENSION
				has_country_flag = ap_synthetic_age_digital
			}
			on_enabled = {
				custom_tooltip = "ap_synthetic_age_digital_tooltip"
				custom_tooltip = "ap_synthetic_age_digital_tradition"
			}
			weight = {
				factor = @tec_force_ap_swap_weight
			}
		}
	}

	ap_tec_synthetic_singularity = {	# Synthetics Tier II	TODO ASCENSION
		potential = {
			# has_ascension_perk = ap_synthetic_evolution
			has_utopia = yes

			OR = {
				tec_has_main_ascension_path = no
				tec_has_synthetic_ascension_path = yes
			}

			tec_has_secondary_ascension_path = no

			
			is_machine_empire = no
			is_hive_empire = no

			#is_mechanical_empire = yes
		}
		possible = {
			custom_tooltip = {
				fail_text = tec_temporarely_disabled
				always = no
			}
			custom_tooltip = {
				fail_text = "requires_ascension_perks_5"
				num_ascension_perks > 4
			}
			custom_tooltip = {
				fail_text = "tec_ap_require_tech_galactic_administration"
				has_technology = tech_galactic_administration
			}
			custom_tooltip = {	# Tradition
				fail_text = "ap_tec_synthetic_singularity_requirements_path"
				has_tradition = tr_synthetics_finish
			}
			custom_tooltip = {	# Situation
				fail_text = "ap_tec_synthetic_singularity_requirements_situation"
				has_country_flag = tec_synthetics_gate_completed
			}
			custom_tooltip = {
				fail_text = "tec_pure_robot_project_requirements"
				NOT = { has_special_project = SYNTHETIC_EVOLUTION_PROJECT }
			}
			custom_tooltip = {
				fail_text = "hive_mind_biological_ascension_only2"
				NOT = { is_hive_empire = yes }
			}
			custom_tooltip = {
				fail_text = "requires_not_shroudwalker_apprentice"
				NOT = { has_origin = origin_shroudwalker_apprentice }
			}
			custom_tooltip = {
				fail_text = "tec_blocked_path"
				NOR = {
					# if two tier 1 or a tier 2 is reached, the path is blocked
					# mixed
					AND = {	# Replicants
						tec_has_genetic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					AND = { # Purity
						tec_has_genetic_ascension_path = yes
						tec_has_psionic_ascension_path = yes
					}
					AND = {	# Purity hive
						tec_has_genetic_ascension_path = yes
						has_ascension_perk = ap_tec_hive_psionic_1
					}
					AND = {	# Infused
						tec_has_psionic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					# pure
					has_ascension_perk = ap_evolutionary_mastery
				#	has_ascension_perk = ap_synthetic_evolution
					has_ascension_perk = ap_tec_cybernetic_fascination
					has_ascension_perk = ap_transcendence

					has_ascension_perk = ap_tec_hive_psionic_2
				}
			}
		}

		on_enabled = {
			hidden_effect = {
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_t2_synthetics_effect = yes
				}
				else = {
					country_event = {
						id = tec_synth_path.200
					}
				}
			}
			custom_tooltip = ap_tec_synthetic_singularity_tooltip
			#custom_tooltip = tec_ap_unlock_singularity_tradition
			custom_tooltip = ap_tec_synthetic_singularity_steps
		}

		ai_weight = {
			factor = @tec_force_path_ap_weight
		}
	}
	ap_tec_machine_mechanic_3 = {		# (machine) Mechanical Tier II	TODO ASCENSION
		potential = {
			always = no
			has_synthethic_dawn = yes
			is_machine_empire = yes
			#has_ascension_perk = ap_tec_machine_mechanic_2
			NOT = {
				has_ascension_perk = ap_tec_machine_mechanic_3
			}
		}
		possible = {
			custom_tooltip = {
				fail_text = tec_temporarely_disabled
				always = no
			}
			custom_tooltip = {
				fail_text = "requires_ascension_perks_4"
				num_ascension_perks > 3
			}
			custom_tooltip = {
				fail_text = "tec_ap_require_tech_galactic_administration"
				has_technology = tech_galactic_administration
			}
			custom_tooltip = {
				fail_text = "tec_machine_t3_requirements"
				has_ascension_perk = ap_tec_machine_mechanic_2
			}
		}

		on_enabled = {
			custom_tooltip = "tec_jumptext"
			custom_tooltip = "ap_tec_machine_mechanic_3_tooltip"
			hidden_effect = {
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_machine_cyb_t2_ap_effect = yes
				}
				else = {
					country_event = {
						id = tec_machine_path.200
					}
				}
			}

			custom_tooltip = ap_tec_machine_mechanic_3_steps
		}

		modifier = {
			MACHINE_species_trait_points_add = 4
		}

		ai_weight = {
			factor = @tec_force_path_ap_weight
		}
	}
# /

# ------------------------------------------------- Mixed
	ap_tec_replicant = {				# Biologic + Machine regular TODO ASCENSION
		# Standard
			potential = {
				has_utopia = yes

				OR = {
					tec_has_main_ascension_path = no # show all times
					tec_has_cybernetic_ascension_path = yes
					tec_has_genetic_ascension_path = yes
				}
				
				tec_has_secondary_ascension_path = no

				OR = {
					AND = {
						is_machine_empire = no
						is_hive_empire = no
					}
					tec_has_cybernetic_ascension_path_exception = yes
					AND = {
						is_hive_empire = yes
						tec_is_biohive = no
					}
				}

				is_mechanical_empire = no
				is_synthetic_empire = no
			}
			possible = {
				custom_tooltip = {
					fail_text = "requires_ascension_perks_5"
					num_ascension_perks > 4
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_galactic_administration"
					has_technology = tech_galactic_administration
				}
				custom_tooltip = {
					fail_text = "ap_tec_replicant_require_cybernetic_or_genetic_tradition"
					OR = {
						has_tradition = tr_genetics_finish
						has_tradition = tr_cybernetics_finish
					}
				}
				custom_tooltip = {
					fail_text = "ap_tec_replicant_require_cybernetic_or_genetic_gate_situation"
					OR = {
						has_country_flag = tec_genetics_gate_completed
						has_country_flag = tec_cybernetics_gate_completed
					}
				}
				custom_tooltip = {
					fail_text = "synthetic_empire_biological_ascension"
					NOT = { has_trait = trait_mechanical }
				}
				custom_tooltip = {
					fail_text = "requires_not_shroudwalker_apprentice"
					NOT = { has_origin = origin_shroudwalker_apprentice }
				}
				custom_tooltip = {
					fail_text = "tec_blocked_path"
					NOR = {
						# Completed main perk
							tec_has_psionic_ascension_path = yes
							#tec_has_genetic_ascension_path = yes
							#tec_has_cybernetic_ascension_path = yes
							tec_has_synthetic_ascension_path = yes
						# /
						# Completed T2 evolved perk
							has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
							has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
							has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
							has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
							#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
							#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
							#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
							#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
						# /
						# Completed mixed path
							#has_ascension_perk = ap_tec_replicant
							has_ascension_perk = ap_tec_biopsionic
							has_ascension_perk = ap_tec_cyberpsionic
						# /

						has_ascension_perk = ap_tec_hive_psionic_3				# hivepsi good
						has_ascension_perk = ap_tec_hive_psionic_shatter		# hivepsi bad
					}
				}
			}

			on_enabled = {
				if = {
					limit = {
						NOT = {
							has_country_flag = tec_replicant_path_finished
						}
					}
					custom_tooltip = "ap_tec_replicant_tooltip"
				}
				else = {
					custom_tooltip = "ap_tec_replicant_main_tooltip_discovered"
				}
				# Warnings
					if = {
						limit = {
							has_origin = origin_necrophage
							has_trait = trait_necrophage
						}
						custom_tooltip = ap_tec_replicant_stops_origin_necrophage
					}
					if = {
						limit = {
							has_origin = origin_clone_army
						}
						custom_tooltip = ap_tec_replicant_stops_origin_clone_army
					}
					if = {
						limit = {
							has_valid_civic = civic_tec_origin_elders
						}
						custom_tooltip = ap_tec_replicant_stops_elder
					}
				# /
				hidden_effect = {
					# Global Controller
					# /
					# Effects
						if = {
							limit = {
								has_country_flag = tec_advanced_ascension
							}
							tec_give_t2_replicant_effect = yes
						}
						else = {
							country_event = {
								id = tec_replicant_path.200
							}
						}
					# /
				}
				if = {	# Pre-steps - Gene Tailoring
					limit = {
						NOT = {
							has_technology = tech_gene_tailoring
						}
					}
					custom_tooltip = tec_ap_unlock_tech_gene_tailoring
					hidden_effect = {
						add_research_option = tech_gene_tailoring
					}
				}
				if = {	# Pre-steps - Quantum
					limit = {
						NOT = {
							has_technology = tech_neuro_quantum_links
						}
					}
					custom_tooltip = tec_ap_unlock_tech_neuro_quantum_links
					hidden_effect = {
						add_research_option = tech_neuro_quantum_links
					}
				}
				if = {	# Genetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_engineered_evolution
						}
					}
					custom_tooltip = ap_tec_replicant_provide_genetic_bonuses
					hidden_effect = {
						add_research_option = tech_gene_seed_purification
						set_country_flag = can_resequence
					}
				}
				if = {	# Cybernetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_the_flesh_is_weak
						}
					}
					custom_tooltip = ap_tec_replicant_provide_cybernetic_bonuses
					hidden_effect = {
						set_country_flag = tec_allow_t1_cybernetics
						set_country_flag = tec_modular_cybernetics
						set_country_flag = tec_cybernetic_module_versatility
					}
				}
				# Tradition
				#custom_tooltip = tec_ap_unlock_synthesis_tradition
				# Steps
				custom_tooltip = ap_tec_replicant_steps
			}

			#modifier = {
				#description = ap_tec_replicant_modifier_desc
				#description_parameters = {
				#	POINTS = @ap_evolutionary_mastery_POINTS
				#}
				#
				#BIOLOGICAL_species_trait_points_add = @ap_evolutionary_mastery_POINTS
			#}

			ai_weight = {
				#not as common, ais are bad at being bots
				factor = @tec_force_path_ap_weight
			}
		# /
		tradition_swap = {	# Combined
			name = ap_tec_replicant_combined
			inherit_effects = no
			inherit_icon = no
			inherit_name = no

			trigger = {
				has_country_flag = tec_replicant_path_finished
				has_country_flag = tec_replicant_combined
			}
			on_enabled = {
				custom_tooltip = "ap_tec_replicant_combined_tooltip_discovered"
				if = {	# Genetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_engineered_evolution
						}
					}
					custom_tooltip = ap_tec_replicant_provide_genetic_bonuses
					hidden_effect = {
						add_research_option = tech_gene_seed_purification
						set_country_flag = can_resequence
					}
				}
				if = {	# Cybernetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_the_flesh_is_weak
						}
					}
					custom_tooltip = ap_tec_replicant_provide_cybernetic_bonuses
					hidden_effect = {
						set_country_flag = tec_allow_t1_cybernetics
						set_country_flag = tec_modular_cybernetics
						set_country_flag = tec_cybernetic_module_versatility
					}
				}
				# Tradition
				custom_tooltip = tec_ap_unlock_synthesis_tradition
				# Steps
				custom_tooltip = ap_tec_replicant_steps
			}
			#modifier = {
				#description = ap_tec_replicant_modifier_desc
				#description_parameters = {
				#	POINTS = @ap_evolutionary_mastery_POINTS
				#}
				#
				#BIOLOGICAL_species_trait_points_add = @ap_evolutionary_mastery_POINTS
			#}

			weight = {
				factor = @tec_force_path_ap_weight
			}
		}
		tradition_swap = {	# Upgraded
			name = ap_tec_replicant_upgraded
			inherit_effects = no
			inherit_icon = no
			inherit_name = no

			trigger = {
				has_country_flag = tec_replicant_path_finished
				has_country_flag = tec_replicant_upgraded
			}
			on_enabled = {
				custom_tooltip = "ap_tec_replicant_upgraded_tooltip_discovered"
				if = {	# Genetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_engineered_evolution
						}
					}
					custom_tooltip = ap_tec_replicant_provide_genetic_bonuses
					hidden_effect = {
						add_research_option = tech_gene_seed_purification
						set_country_flag = can_resequence
					}
				}
				if = {	# Cybernetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_the_flesh_is_weak
						}
					}
					custom_tooltip = ap_tec_replicant_provide_cybernetic_bonuses
					hidden_effect = {
						set_country_flag = tec_allow_t1_cybernetics
						set_country_flag = tec_modular_cybernetics
						set_country_flag = tec_cybernetic_module_versatility
					}
				}
				# Tradition
				custom_tooltip = tec_ap_unlock_synthesis_tradition
				# Steps
				custom_tooltip = ap_tec_replicant_steps
			}
			#modifier = {
				#description = ap_tec_replicant_modifier_desc
				#description_parameters = {
				#	POINTS = @ap_evolutionary_mastery_POINTS
				#}
				#
				#BIOLOGICAL_species_trait_points_add = @ap_evolutionary_mastery_POINTS
			#}

			weight = {
				factor = @tec_force_path_ap_weight
			}
		}
	}

	ap_tec_biopsionic = {				# Biologic + Psionic regular TODO ASCENSION
		# Standard
			potential = {
				has_utopia = yes

				OR = {
					tec_has_main_ascension_path = no # show all times
					tec_has_psionic_ascension_path = yes
					tec_has_genetic_ascension_path = yes
				}
				
				tec_has_secondary_ascension_path = no
				
				is_hive_empire = no
				is_machine_empire = no

				is_mechanical_empire = no
				is_synthetic_empire = no
			}
			possible = {
				custom_tooltip = {
					fail_text = "requires_ascension_perks_5"
					num_ascension_perks > 4
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_galactic_administration"
					has_technology = tech_galactic_administration
				}
				custom_tooltip = {
					fail_text = "ap_tec_biopsionic_require_genetic_or_psionic_tradition"
					OR = {
						has_tradition = tr_genetics_finish
						has_tradition = tr_psionics_finish
					}
				}
				custom_tooltip = {
					fail_text = "ap_tec_biopsionic_require_genetic_or_psionic_gate_situation"
					OR = {
						has_country_flag = tec_genetics_gate_completed
						has_country_flag = tec_psionics_gate_completed
					}
				}
				custom_tooltip = {
					fail_text = "synthetic_empire_biological_ascension"
					NOT = { has_trait = trait_mechanical }
				}
				custom_tooltip = {
					fail_text = "tec_blocked_path"
					NOR = {
						# Completed main perk
							#tec_has_psionic_ascension_path = yes
							#tec_has_genetic_ascension_path = yes
							tec_has_cybernetic_ascension_path = yes
							tec_has_synthetic_ascension_path = yes
						# /
						# Completed T2 evolved perk
							has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
							has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
							has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
							has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
							#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
							#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
							#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
							#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
						# /
						# Completed mixed path
							has_ascension_perk = ap_tec_replicant
							#has_ascension_perk = ap_tec_biopsionic
							has_ascension_perk = ap_tec_cyberpsionic
						# /

						has_ascension_perk = ap_tec_hive_psionic_3				# hivepsi good
						has_ascension_perk = ap_tec_hive_psionic_shatter		# hivepsi bad
					}
				}
			}
			on_enabled = {
				if = {
					limit = {
						NOT = {
							has_country_flag = tec_biopsionic_path_finished
						}
					}
					custom_tooltip = "ap_tec_biopsionic_tooltip"
				}
				else = {
					custom_tooltip = "ap_tec_biopsionic_tooltip_discovered"
				}
				hidden_effect = {
					# Global Controller
					# /
					if = {
						limit = {
							has_country_flag = tec_advanced_ascension
						}
						tec_give_t2_biopsionic_effect = yes
					}
					else = {
						country_event = {
							id = tec_biopsionic_path.200
						}
					}
				}
				if = {	# Pre-steps - Gene Tailoring
					limit = {
						NOT = {
							has_technology = tech_gene_tailoring
						}
					}
					custom_tooltip = tec_ap_unlock_tech_gene_tailoring
					hidden_effect = {
						add_research_option = tech_gene_tailoring
					}
				}
				if = {	# Pre-steps - Psi theory
					limit = {
						NOT = {
							has_technology = tech_psionic_theory
						}
					}
					custom_tooltip = tec_ap_unlock_tech_psionic_theory
					hidden_effect = {
						add_research_option = tech_psionic_theory
					}
				}
				if = {	# Genetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_engineered_evolution
						}
					}
					custom_tooltip = ap_tec_biopsionic_provide_genetic_bonuses
					hidden_effect = {
						add_research_option = tech_gene_seed_purification
						set_country_flag = can_resequence
					}
				}
				if = {	# Psionic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_mind_over_matter
						}
					}
					custom_tooltip = ap_tec_biopsionic_provide_psionic_bonuses
					hidden_effect = {
						# Psi
						add_research_option = tech_telepathy
						set_country_flag = tec_unlock_psi_corps
						# Shroud
						set_country_flag = tec_shroud_premium_incursion
						if = {
							limit = {
								NOT = {
									has_country_flag = breached_shroud
								}
							}
							# Gives the shroud access
							set_country_flag = breached_shroud
							country_event = {
								id = tec_psionic_path.110
							}
						}
					}
				}
				# Tradition
				#custom_tooltip = tec_ap_unlock_synthesis_tradition
				# Steps
				custom_tooltip = ap_tec_biopsionic_steps
			}
			#modifier = {	# Note: Only for psionic_starting empires now, with the swap
			#	BIOLOGICAL_species_trait_points_add = @ap_evolutionary_mastery_POINTS
			#}
			ai_weight = {
				factor = @tec_force_path_ap_weight
			}
		# /
		tradition_swap = {	# Psionic
			name = ap_tec_biopsionic_started_psionic
			inherit_effects = no
			inherit_icon = yes
			inherit_name = yes
			
			trigger = {
				tec_has_psionic_ascension_path = yes
			}

			on_enabled = {
				if = {
					limit = {
						NOT = {
							has_country_flag = tec_biopsionic_path_finished
						}
					}
					custom_tooltip = "ap_tec_biopsionic_tooltip"
				}
				else = {
					custom_tooltip = "ap_tec_biopsionic_tooltip_discovered"
				}
				hidden_effect = {
					# Global Controller
					# /
					if = {
						limit = {
							has_country_flag = tec_advanced_ascension
						}
						tec_give_t2_biopsionic_effect = yes
					}
					else = {
						country_event = {
							id = tec_biopsionic_path.200
						}
					}
				}
				if = {	# Pre-steps - Gene Tailoring
					limit = {
						NOT = {
							has_technology = tech_gene_tailoring
						}
					}
					custom_tooltip = tec_ap_unlock_tech_gene_tailoring
					hidden_effect = {
						add_research_option = tech_gene_tailoring
					}
				}
				if = {	# Pre-steps - Psi theory
					limit = {
						NOT = {
							has_technology = tech_psionic_theory
						}
					}
					custom_tooltip = tec_ap_unlock_tech_psionic_theory
					hidden_effect = {
						add_research_option = tech_psionic_theory
					}
				}
				if = {	# Genetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_engineered_evolution
						}
					}
					custom_tooltip = ap_tec_biopsionic_provide_genetic_bonuses
					hidden_effect = {
						add_research_option = tech_gene_seed_purification
						set_country_flag = can_resequence
					}
				}
				if = {	# Psionic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_mind_over_matter
						}
					}
					custom_tooltip = ap_tec_biopsionic_provide_psionic_bonuses
					hidden_effect = {
						# Psi
						add_research_option = tech_telepathy
						set_country_flag = tec_unlock_psi_corps
						# Shroud
						set_country_flag = tec_shroud_premium_incursion
						if = {
							limit = {
								NOT = {
									has_country_flag = breached_shroud
								}
							}
							# Gives the shroud access
							set_country_flag = breached_shroud
							country_event = {
								id = tec_psionic_path.110
							}
						}
					}
				}
				# Tradition
				custom_tooltip = tec_ap_unlock_synthesis_tradition
				# Steps
				custom_tooltip = ap_tec_biopsionic_steps
			}

			modifier = {
				BIOLOGICAL_species_trait_points_add = @ap_evolutionary_mastery_POINTS
			}

			weight = {
				factor = @tec_force_path_ap_weight
			}
		}
	}

	ap_tec_cyberpsionic = {				# Machine + Psionic regular TODO ASCENSION
		# Standard
			potential = {
				has_utopia = yes

				OR = {
					tec_has_main_ascension_path = no # show all times
					tec_has_psionic_ascension_path = yes
					tec_has_cybernetic_ascension_path = yes
				}
				
				tec_has_secondary_ascension_path = no
				
				OR = {
					AND = {
						is_machine_empire = no
						is_hive_empire = no
					}
					tec_has_cybernetic_ascension_path_exception = yes
				}

				is_hive_empire = no
				is_mechanical_empire = no
				is_synthetic_empire = no
			}
			possible = {
				custom_tooltip = {
					fail_text = "requires_ascension_perks_5"
					num_ascension_perks > 4
				}
				custom_tooltip = {
					fail_text = "tec_ap_require_tech_galactic_administration"
					has_technology = tech_galactic_administration
				}
				custom_tooltip = {
					fail_text = "ap_tec_cyberpsionic_require_cybernetic_or_psionic_tradition"
					OR = {
						has_tradition = tr_psionics_finish
						has_tradition = tr_cybernetics_finish
					}
				}
				custom_tooltip = {
					fail_text = "ap_tec_cyberpsionic_require_cybernetic_or_psionic_gate_situation"
					OR = {
						has_country_flag = tec_psionics_gate_completed
						has_country_flag = tec_cybernetics_gate_completed
					}
				}
				custom_tooltip = {
					fail_text = "synthetic_empire_psionic_ascension"
					NOT = { has_trait = trait_mechanical }
				}
				custom_tooltip = {
					fail_text = "tec_blocked_path"
					NOR = {
						# Completed main perk
							#tec_has_psionic_ascension_path = yes
							tec_has_genetic_ascension_path = yes
							#tec_has_cybernetic_ascension_path = yes
							tec_has_synthetic_ascension_path = yes
						# /
						# Completed T2 evolved perk
							has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
							has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
							has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
							has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
							#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
							#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
							#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
							#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
						# /
						# Completed mixed path
							has_ascension_perk = ap_tec_replicant
							has_ascension_perk = ap_tec_biopsionic
							#has_ascension_perk = ap_tec_cyberpsionic
						# /

						has_ascension_perk = ap_tec_hive_psionic_3				# hivepsi good
						has_ascension_perk = ap_tec_hive_psionic_shatter		# hivepsi bad
					}
				}
			}
			on_enabled = {
				if = {
					limit = {
						NOT = {
							has_country_flag = tec_cyberpsionic_path_finished
						}
					}
					custom_tooltip = "ap_tec_cyberpsionic_tooltip"
				}
				else = {
					custom_tooltip = "ap_tec_cyberpsionic_tooltip_discovered"
				}
				# Warnings
				# /
				hidden_effect = {
					# Global Controller
					# /
					# Effects
						if = {
							limit = {
								has_country_flag = tec_advanced_ascension
							}
							tec_give_t2_cyberpsionic_effect = yes
						}
						else = {
							country_event = {
								id = tec_cyberpsionic_path.200
							}
						}
					# /
				}
				if = {	# Pre-steps - Psi theory
					limit = {
						NOT = {
							has_technology = tech_psionic_theory
						}
					}
					custom_tooltip = tec_ap_unlock_tech_psionic_theory
					hidden_effect = {
						add_research_option = tech_psionic_theory
					}
				}
				if = {	# Pre-steps - Quantum
					limit = {
						NOT = {
							has_technology = tech_neuro_quantum_links
						}
					}
					custom_tooltip = tec_ap_unlock_tech_neuro_quantum_links
					hidden_effect = {
						add_research_option = tech_neuro_quantum_links
					}
				}
				if = {	# Cybernetic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_the_flesh_is_weak
						}
					}
					custom_tooltip = ap_tec_cyberpsionic_provide_cybernetic_bonuses
					hidden_effect = {
						set_country_flag = tec_allow_t1_cybernetics
						set_country_flag = tec_modular_cybernetics
						set_country_flag = tec_cybernetic_module_versatility
					}
				}
				if = {	# Psionic bonuses
					limit = {
						NOT = {
							has_ascension_perk = ap_mind_over_matter
						}
					}
					custom_tooltip = ap_tec_cyberpsionic_provide_psionic_bonuses
					hidden_effect = {
						# Psi
						add_research_option = tech_telepathy
						set_country_flag = tec_unlock_psi_corps
						# Shroud
						set_country_flag = tec_shroud_premium_incursion
						if = {
							limit = {
								NOT = {
									has_country_flag = breached_shroud
								}
							}
							# Gives the shroud access
							set_country_flag = breached_shroud
							country_event = {
								id = tec_psionic_path.110
							}
						}
					}
				}
				# Tradition
				#custom_tooltip = tec_ap_unlock_cyberpsionic_tradition
				# Steps
				custom_tooltip = ap_tec_cyberpsionic_steps
			}
			ai_weight = {
				factor = @tec_force_path_ap_weight
			}
		# /
	}

	#ap_tec_biopsychic = {		# TODO ASCENSION
	#}

	#ap_tec_cyberpsychic = {	# TODO ASCENSION
	#}
# /


# -------------------------------------------------------------
# --------------- Discarded/nonoperational --------------------
# -------------------------------------------------------------

# ------------------------------------------------- Hive
	ap_tec_hive_psionic_1 = {		# Psionic T1
		potential = {
			always = no
		}
		possible = {
			always = no
		}
		ai_weight = {
			factor = 0
		}

		on_enabled = {
			custom_tooltip = ap_tec_hive_psionic_1_tooltip
			custom_tooltip = ap_tec_hive_psionic_1_steps
		}
	}

	ap_tec_hive_psionic_3 = {		# Psionic TII
		potential = {
			always = no
		}
		possible = {
			always = no
		}
		ai_weight = {
			factor = 0
		}

		on_enabled = {
			custom_tooltip = ap_tec_hive_psionic_3_tooltip
			custom_tooltip = ap_tec_hive_psionic_3_steps
		}
	}

	# Psionic T3 bad
	ap_tec_hive_psionic_shatter = {
		potential = {
			always = no
		}
		possible = {
			always = no
		}
		ai_weight = {
			factor = 0
		}

		on_enabled = {
			
			custom_tooltip = ap_tec_hive_psionic_shatter_steps
		}
	}
# /

# Discarded but kept for convenience
# -----------------------------------------
	#Psionic tier II
	ap_transcendence = {
		potential = {
			always = no
			has_utopia = yes
			NOR = {
				#selfperk
				has_ascension_perk = ap_transcendence
			
				#auth
				is_machine_empire = yes
				is_hive_empire = yes

				# Completed T2 evolved perk
					has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
					has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
					has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
					has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
					#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
					#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
					#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
					#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
				# /
				# Completed mixed path
					has_ascension_perk = ap_tec_replicant
					has_ascension_perk = ap_tec_biopsionic
					has_ascension_perk = ap_tec_cyberpsionic
				# /

				has_ascension_perk = ap_tec_hive_psionic_3		# hivepsi good
				has_ascension_perk = ap_tec_hive_psionic_shatter			# hivepsi bad

				# PD
				has_origin = @origin_techno_world
			}
			is_mechanical_empire = no
			is_synthetic_empire = no
		}

		possible = {
			custom_tooltip = {
				fail_text = "requires_ascension_perks_2"
				num_ascension_perks > 1
			}
			custom_tooltip = {
				fail_text = "requires_technology_psionic_theory"
				has_technology = tech_psionic_theory
			}
			custom_tooltip = {
				fail_text = "requires_ap_mind_over_matter"
				tec_has_psionic_ascension_path = yes
			}
			custom_tooltip = {
				fail_text = "synthetic_empire_psionic_ascension"
				NOT = { has_trait = trait_mechanical }
			}
			custom_tooltip = {
				fail_text = "tec_blocked_path"
				NOR = {
					# if two tier 1 or a tier 2 is reached, the path is blocked
					# mixed
					AND = {	# Replicants
						tec_has_genetic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					AND = { # Purity
						tec_has_genetic_ascension_path = yes
						tec_has_psionic_ascension_path = yes
					}
					AND = {	# Purity hive
						tec_has_genetic_ascension_path = yes
						has_ascension_perk = ap_tec_hive_psionic_1
					}
					AND = {	# Infused
						tec_has_psionic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					# pure
					has_ascension_perk = ap_evolutionary_mastery
					has_ascension_perk = ap_synthetic_evolution
					has_ascension_perk = ap_tec_cybernetic_fascination
				#	has_ascension_perk = ap_transcendence

					has_ascension_perk = ap_tec_hive_psionic_2
				}
			}
			custom_tooltip = {
				fail_text = tec_crisis_cant_pick_ap
				is_crisis_faction = no
			}
		}

		on_enabled = {
			custom_tooltip = "transcendence_tooltip"
			hidden_effect = {
				set_country_flag = tec_psionic_assimilation
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_t2_psionic_effect = yes
				}
				else = {
					country_event = { 	# Announce
						id = tec_psionic_path.120
					}
					country_event = {	# Random traits
						id = tec_psionic_path.150
						days = 360
						random = 60
					}
					country_event = {	# Enclave
						id = enclave.7000
						days = 360
						random = 720
					}
				}
			}

			custom_tooltip = ap_transcendence_steps
		}

		ai_weight = {
			factor = 20000
		}
	}

	#Biologic tier II
	ap_evolutionary_mastery = {
		potential = {
			always = no
			#tec_has_genetic_ascension_path = yes
			has_utopia = yes
			NOR = {
				#selfperk
				has_ascension_perk = ap_evolutionary_mastery
			
				#auth
				is_machine_empire = yes

				# Completed T2 evolved perk
					has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
					has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
					has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
					has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
					#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
					#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
					#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
					#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
				# /
				# Completed mixed path
					has_ascension_perk = ap_tec_replicant
					has_ascension_perk = ap_tec_biopsionic
					has_ascension_perk = ap_tec_cyberpsionic
				# /

				has_ascension_perk = ap_tec_hive_psionic_3		# hivepsi good
				has_ascension_perk = ap_tec_hive_psionic_shatter			# hivepsi bad

				# PD
				
				has_origin = @origin_techno_world
			}
			is_mechanical_empire = no
			is_synthetic_empire = no
		}
		possible = {
			custom_tooltip = {
				fail_text = "requires_ascension_perks_2"
				num_ascension_perks > 1
			}
			custom_tooltip = {
				fail_text = "requires_technology_glandular_acclimation"
				has_technology = tech_glandular_acclimation
			}
			custom_tooltip = {
				fail_text = "requires_ap_engineered_evolution"
				tec_has_genetic_ascension_path = yes
			}
			custom_tooltip = {
				fail_text = "synthetic_empire_biological_ascension"
				NOT = { has_trait = trait_mechanical }
			}
			custom_tooltip = {
				fail_text = "requires_not_shroudwalker_apprentice"
				NOT = { has_origin = origin_shroudwalker_apprentice }
			}
			custom_tooltip = {
				fail_text = "tec_blocked_path"
				NOR = {
					# if two tier 1 or a tier 2 is reached, the path is blocked
					# mixed
					AND = {	# Replicants
						tec_has_genetic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					AND = { # Purity
						tec_has_genetic_ascension_path = yes
						tec_has_psionic_ascension_path = yes
					}
					AND = {	# Purity hive
						tec_has_genetic_ascension_path = yes
						has_ascension_perk = ap_tec_hive_psionic_1
					}
					AND = {	# Infused
						tec_has_psionic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					# pure
					#has_ascension_perk = ap_evolutionary_mastery
					has_ascension_perk = ap_synthetic_evolution
					has_ascension_perk = ap_tec_cybernetic_fascination
					has_ascension_perk = ap_transcendence

					has_ascension_perk = ap_tec_hive_psionic_2
				}
			}
		}

		on_enabled = {
			hidden_effect = {
				set_country_flag = tec_allow_t2_biotraits
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_t2_genetics_effect = yes
				}
				else = {
					#country_event = { id = tec_gene_path.2000 }
				}
			}
			if = {
				limit = {
					has_origin = origin_clone_army
					OR = {
						has_trait = trait_clone_soldier_infertile
						has_trait = trait_clone_soldier_infertile_full_potential
					}
				}
				custom_tooltip = clone_soldier_locked_genes
			}

			custom_tooltip = ap_evolutionary_mastery_steps
		}

		modifier = {
			description = ap_evolutionary_mastery_modifier_desc
			description_parameters = {
				POINTS = @ap_evolutionary_mastery_POINTS
				COST_MULT = @ap_evolutionary_mastery_COST_MULT
			}

			BIOLOGICAL_species_trait_points_add = @ap_evolutionary_mastery_POINTS
			BIOSERVANT_species_trait_points_add = @ap_evolutionary_mastery_POINTS
			# These are not needed to to inherit_trait_points

			modify_species_cost_mult = @ap_evolutionary_mastery_COST_MULT
		}

		ai_weight = {
			factor = 20000
		}
	}

	#Robotics tier IIB
	ap_tec_cybernetic_fascination = {
		potential = {
			always = no
			# has_ascension_perk = ap_the_flesh_is_weak
			has_utopia = yes
			NOR = {
				#selfperk
				has_ascension_perk = ap_tec_cybernetic_fascination
			
				#auth
				is_machine_empire = yes

				# Completed T2 evolved perk
					has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
					has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
					has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
					has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
					#has_ascension_perk = ap_tec_biogenics_t2				# perfect biogenics
					#has_ascension_perk = ap_tec_bioware_t2					# perfect bioware
					#has_ascension_perk = ap_tec_psychic_t2					# perfect psychic
					#has_ascension_perk = ap_tec_ethereal_t2				# perfect ethereal
				# /
				# Completed mixed path
					has_ascension_perk = ap_tec_replicant
					has_ascension_perk = ap_tec_biopsionic
					has_ascension_perk = ap_tec_cyberpsionic
				# /

				has_ascension_perk = ap_tec_hive_psionic_3		# hivepsi good
				has_ascension_perk = ap_tec_hive_psionic_shatter			# hivepsi bad

				# PD
				
				has_origin = @origin_techno_world
			}
			is_mechanical_empire = no
		}
		possible = {
			custom_tooltip = {
				fail_text = "requires_ascension_perks_2"
				num_ascension_perks > 1
			}
			custom_tooltip = {
				fail_text = "requires_technology_droid_workers_hive"
				OR = {
					has_technology = tech_droid_workers
					has_valid_civic = civic_tec_origin_mecha_perfectionists
				}
			}
			custom_tooltip = {
				fail_text = "requires_ap_the_flesh_is_weak"
				tec_has_cybernetic_ascension_path = yes
			}
			custom_tooltip = {
				fail_text = "synthetic_empire_synthetic_ascension"
				NOT = { has_trait = trait_mechanical }
			}
			custom_tooltip = {
				fail_text = "tec_blocked_path"
				NOR = {
					# if two tier 1 or a tier 2 is reached, the path is blocked
					# mixed
					AND = {	# Replicants
						tec_has_genetic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					AND = { # Purity
						tec_has_genetic_ascension_path = yes
						tec_has_psionic_ascension_path = yes
					}
					AND = {	# Purity hive
						tec_has_genetic_ascension_path = yes
						has_ascension_perk = ap_tec_hive_psionic_1
					}
					AND = {	# Infused
						tec_has_psionic_ascension_path = yes
						tec_has_cybernetic_ascension_path = yes
					}
					# pure
					has_ascension_perk = ap_evolutionary_mastery
					has_ascension_perk = ap_synthetic_evolution
				#	has_ascension_perk = ap_tec_cybernetic_fascination
					has_ascension_perk = ap_transcendence

					has_ascension_perk = ap_tec_hive_psionic_2
					}
			}
		}

		on_enabled = {
			custom_tooltip = ap_tec_cybernetic_fascination_tooltip
			hidden_effect = {
				set_country_flag = tec_allow_t1_cybernetics
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_t2_cybernetics_effect = yes
				}
				else = {
					country_event = {
						id = tec_cybernetic_path.150
					}
				}
			}

			custom_tooltip = ap_tec_cybernetic_fascination_steps
		}

		modifier = {
			description = ap_tec_replicant_modifier_desc
			description_parameters = {
				POINTS = 2
			}
			BIOLOGICAL_species_trait_points_add = 2
			planet_pops_tec_cybernetics_upkeep_mult = -0.10
		}

		ai_weight = {
			#not as common, ais are bad at being bots
			factor = 20000
		}
	}

	# Mechanical T2
	ap_tec_machine_mechanic_2 = {
		potential = {
			always = no
			has_synthethic_dawn = yes
			is_machine_empire = yes
			#has_ascension_perk = ap_synthetic_age
			NOT = {
				has_ascension_perk = ap_tec_machine_mechanic_2
			}
		}
		possible = {
			custom_tooltip = {
				fail_text = "requires_ascension_perks_2"
				num_ascension_perks > 1
			}
			custom_tooltip = {
				fail_text = "tec_machine_t2_requirements"
				has_ascension_perk = ap_synthetic_age
			}
		}

		on_enabled = {
			custom_tooltip = "tec_jumptext"
			custom_tooltip = "ap_tec_machine_mechanic_2_tooltip"
			custom_tooltip = "tec_jumptext"
			if = {
				limit = {
					NOR = {
						has_ethic = ethic_gestalt_empathy
						has_valid_civic = civic_machine_servitor
						has_valid_civic = civic_machine_assimilator
					}
				}
				custom_tooltip = "tec_ap_provides_machine_assimilation_mechanic"
				hidden_effect = {
					set_country_flag = tec_machine_encasing
				}
			}
			if = {
				limit = {
					has_ethic = ethic_gestalt_apathy
					OR = {
						has_valid_civic = civic_machine_servitor
						has_valid_civic = civic_machine_assimilator
					}
				}
				custom_tooltip = "tec_ap_provides_machine_assimilation_servitor"
				hidden_effect = {
					set_country_flag = tec_machine_encasing
				}
			}
			hidden_effect = {
				if = {
					limit = {
						has_country_flag = tec_advanced_ascension
					}
					tec_give_machine_cyb_t2_ap_effect = yes
				}
				else = {
					country_event = {
						id = tec_machine_path.150
					}
				}
			}

			custom_tooltip = ap_tec_machine_mechanic_2_steps
		}

		modifier = {
			MACHINE_species_trait_points_add = 2
			modify_species_cost_mult = -0.25
		}

		ai_weight = {
			factor = @tec_force_path_ap_weight
		}
	}

	# Psionic T2
	ap_tec_hive_psionic_2 = {
		potential = {
			always = no
		}
		possible = {
			always = no
		}
		ai_weight = {
			factor = 0
		}

		on_enabled = {
			custom_tooltip = ap_tec_hive_psionic_2_tooltip
			custom_tooltip = ap_tec_hive_psionic_2_steps
		}
	}

	ap_tec_machine_psi_2 = {
		potential = {
			always = no
		}
		possible = {
			always = no
		}
	}
# /

# -----------------------------------------
# NEW SECONDARY PATHS
# -----------------------------------------


# - Empire path
	# Manifested Will
			# The next level
			# Arcane Heritage		
			
# - Territory Path
	# Castling
			# Eternal vigilance
			# Grasp the void

# - Megastructures
	# Voidborne
			# Void Architects

# - Additional APs
	# Biogenesis

# Technology path
	# Technological ascendancy
			# Innovative Perfection
			# Technological adaptation
	
# Ethic perks
							#	- Vanilla ethics - 
	# Xenophile - Empathy
			# Embrace Diversity
			# A Future Together
	# Xenophobe - Apathy
			# Suffer not the xeno
			# Superiority of our own
	# Pacifist
			# Age of Prosperity
			# In Perfect Harmony
	# Militarist
			# Art of War
			# Power overwhelming
	# Materialist
			#
			# Imperative efficiency
	# Spiritualist
			# Motivational Creeds
			# Undeniable Faith
	# Egalitarian
			# Political Prowess
			# Revolutionary Ideals
	# Autoritarian
			# Iron fist ruling
			# Represed Thoughts
							#	- new ethics - 
	# Industrialist - Overconsumption
			# Accelerated Manufacture
			# Planetary Fracking
	# Ecological - Preservation
			# Terrenal Symbiosis
			# Planetary Preservation
	# Competitive - Capitalism
			# Economic venture
			# Market Dominance
	# Cooperative - cooperative
			# Social Synergy
			# Capital Nullification
	# Elitist
			# Elite Corps
			# Phoenix Project
	# Extrospective
			
	# Introspective
		#	- Governments - 


# REMOVED
ap_organo_machine_interfacing = {	# Why 3 variants of the same ap?
	potential = {
		always = no
	}
	possible = {
		always = no
	}
}
ap_organo_machine_interfacing_assimilator = {	# Why 3 variants of the same ap?
	potential = {
		always = no
	}
	possible = {
		always = no
	}
}