

# Base automation
# ------------------------------------------------------------
tec_automated_production = {
	inline_script = {
		script = tec_type_hint
		float = $BASE$
		[[BASE_VALUE] script_value = $BASE_VALUE$ ]
		economic_category = $ECO_CAT$
		resource = $RESOURCE$
		[[REQUISITION] planet_flag = $REQUISITION$ ]
		[[REQUISITION_AMOUNT] float = $REQUISITION_AMOUNT$ ]
	}

	base = 0
	[[!BASE_VALUE] 
		add = $BASE$
	]
	[[BASE_VALUE]
		add = value:$BASE_VALUE$|BASE|$BASE$|
	]

	complex_trigger_modifier = {
		trigger = check_modifier_value
		parameters = {
			modifier = $ECO_CAT$_$RESOURCE$_produces_add
		}
		mode = add
	}
	[[REQUISITION]][[REQUISITION_AMOUNT]]
	# Disabling since overlord resources does not work in buildings and districts for now
	# [[REQUISITION]
	# 	modifier = {
	# 		add = $REQUISITION_AMOUNT$
	# 		has_planet_flag = $REQUISITION$
	# 	}
	# ]
	mult = value:tec_automated_mult_production|ECO_CAT|$ECO_CAT$|RESOURCE|$RESOURCE$|
	mult = value:scripted_modifier_mult|MODIFIER|tec_planet_automation_mult|
}

tec_automated_mult_production = {
	inline_script = {
		script = tec_type_hint
		economic_category = $ECO_CAT$
		resource = $RESOURCE$
	}

	base = 1
	complex_trigger_modifier = {
		trigger = check_modifier_value
		parameters = {
			modifier = $ECO_CAT$_$RESOURCE$_produces_mult
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = check_modifier_value
		parameters = {
			modifier = $ECO_CAT$_produces_mult
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = check_modifier_value
		parameters = {
			modifier = planet_jobs_productive_$RESOURCE$_produces_mult
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = check_modifier_value
		parameters = {
			modifier = planet_jobs_productive_produces_mult
		}
		mode = add
	}

	complex_trigger_modifier = {
		trigger = check_modifier_value
		parameters = {
			modifier = planet_jobs_$RESOURCE$_produces_mult
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = check_modifier_value
		parameters = {
			modifier = planet_jobs_produces_mult
		}
		mode = add
	}
}

# Habitats
# ------------------------------------------------------------
 # New Habitat Production
	tec_habitat_resource_production = {
		inline_script = {
			script = tec_type_hint
			float = $BASE$
			modifier = $DISTRICT_MODIFIER$
			economic_category = $ECO_CAT$
			resource = $RESOURCE$
			country_scope = $OWNER_SCOPE$
			economic_category = $STATION_ECO_CAT$
		}

		base = $BASE$

		complex_trigger_modifier = {	# District
			trigger = check_modifier_value
			trigger_scope = planet
			parameters = {
				modifier = $DISTRICT_MODIFIER$
			}
			mode = add
		}
		complex_trigger_modifier = { # stations
			trigger = check_modifier_value
			trigger_scope = $OWNER_SCOPE$
			parameters = {
				modifier = $ECO_CAT$_$RESOURCE$_produces_add
			}
			mode = add
		}

		mult = value:tec_station_output_mult|STATION_BASE|1|STATION_SCOPE|$OWNER_SCOPE$|STATION_TYPE|$STATION_ECO_CAT$|

		mult = $SCALING$

		mult = value:scripted_modifier_mult|MODIFIER|tec_planet_automation_mult|
	}
	tec_station_output_mult = {
		inline_script = {
			script = tec_type_hint
			float = $STATION_BASE$
			country_scope = $STATION_SCOPE$
			economic_category = $STATION_TYPE$
		}
		base = $STATION_BASE$

		complex_trigger_modifier = {	# Station
			trigger = check_modifier_value
			trigger_scope = $STATION_SCOPE$
			parameters = {
				modifier = $STATION_TYPE$_produces_mult
			}
			mode = add
		}
	}
	#mult = value:tec_habitat_resource_production|BASE|0|MULT|0.5|DISTRICT|district_hab_energy_max|SCOPE|owner|MODULE|starbase_energy_production_modules|RESOURCE|energy|STATION|station_gatherers|
	#mult = value:tec_habitat_resource_production|BASE|0|MULT|0.5|DISTRICT|district_hab_mining_max|SCOPE|owner|MODULE|starbase_minerals_production_modules|RESOURCE|minerals|STATION|station_gatherers|
	#mult = value:tec_habitat_resource_production|BASE|0|MULT|0.5|DISTRICT|district_tec_hab_food_max|SCOPE|owner|MODULE|starbase_food_production_modules|RESOURCE|food|STATION|station_gatherers|

	#mult = value:tec_habitat_resource_production|BASE|0|SCALING|0.5|DISTRICT|district_hab_science_max|SCOPE|owner|MODULE|starbase_physics_research_modules|RESOURCE|physics_research|STATION|station_researchers|
	#mult = value:tec_habitat_resource_production|BASE|0|SCALING|0.5|DISTRICT|district_hab_science_max|SCOPE|owner|MODULE|starbase_society_research_modules|RESOURCE|society_research|STATION|station_researchers|
	#mult = value:tec_habitat_resource_production|BASE|0|SCALING|0.5|DISTRICT|district_hab_science_max|SCOPE|owner|MODULE|starbase_engineering_research_modules|RESOURCE|engineering_research|STATION|station_researchers|

	# NOTE: This is done so it interacts with the habitat rework
	# Habitats have a base scaling with the habitat level if wanted
	# ADDS the total number of district_max_add of the class we want
	# ADDS the station resource add value
	# Mults by station production
	# Example: Mining district in an habitat with max 9 mineral districts with +2 resources from mining stations + 100% mining station output produce 
	# ((9/2) + 2)*2 = 13 minerals
 # /


tec_habitat_base_production = {	# OLD/UNUSED
	inline_script = {
		script = tec_type_hint
		float = $BASE$
	}

	base = $BASE$

	modifier = {
		planet = {
			tec_is_upgraded_habitat = yes
		}
		add = 2
	}

	modifier = {
		planet = {
			tec_is_fully_upgraded_habitat = yes
		}
		add = 2
	}
}

tec_machine_angler_extractor_base_production = {
	inline_script = {
		script = tec_type_hint
		float = $BASE$
	}

	base = $BASE$
	modifier = {
		planet = {
			has_modifier = pm_tec_desiccation_1
		}
		add = 1
	}
	modifier = {
		planet = {
			has_modifier = pm_tec_desiccation_2
		}
		add = 2
	}
	modifier = {
		planet = {
			has_modifier = pm_tec_desiccation_3
		}
		add = 3
	}
}

tec_machine_angler_nexus_base_production = {
	inline_script = {
		script = tec_type_hint
		float = $BASE$
	}

	base = 0
	modifier = {
		exists = owner
		owner = {
			is_variable_set = tec_desiccated_worlds
		}
		add = owner.tec_desiccated_worlds
	}
	mult = 4
	add = $BASE$
}


# Deprecated

tec_automated_district_production = {
	inline_script = {
		script = tec_type_hint
		float = $BASE$
		[[BASE_VALUE] script_value = $BASE_VALUE$ ]
		economic_category = $ECO_CAT$
		resource = $RESOURCE$
		[[REQUISITION] planet_flag = $REQUISITION$ ]
		[[REQUISITION_AMOUNT] float = $REQUISITION_AMOUNT$ ]
	}
	base = 0
	# Use new value name
	add = value:tec_automated_production|BASE|$BASE$|BASE_VALUE|$BASE_VALUE|no$|ECO_CAT|$ECO_CAT$|RESOURCE|$RESOURCE$|REQUISITION|$REQUISITION|no$|REQUISITION_AMOUNT|$REQUISITION_AMOUNT|no$|

}